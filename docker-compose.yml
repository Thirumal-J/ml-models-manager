version: "3"

services:
  
  # api-gateway:
  #   image: nginx:1.17.10
  #   container_name: reverse_proxy
  #   depends_on:
  #     - core
  #     - classification
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - 80:80

  core:
    build: 
      context: ./Backend/src
      dockerfile: "core/core.dockerfile"
    environment:
        - PYTHONUNBUFFERED=1
    ports:
        - "${PORT_MLFLOW}:${PORT_MLFLOW}"
    volumes:
        - mymlruns:${SHARED_VOLUME}
    networks:
        - mlapp-net

  classification:
    build: 
      context: ./Backend/src
      dockerfile: "pipelines/classification/classification.dockerfile"
    environment:
        - PYTHONUNBUFFERED=1
    ports:
        - "${PORT_CLASSIFICATION}:${PORT_CLASSIFICATION}"
    volumes:
        - mymlruns:${SHARED_VOLUME}
    depends_on:
        - core
    networks:
        - mlapp-net

  regression:
    build: 
      context: ./Backend/src
      dockerfile: "pipelines/classification/classification.dockerfile"
    environment:
        - PYTHONUNBUFFERED=1
    ports:
        - "${PORT_REGRESSION}:${PORT_REGRESSION}"
    volumes:
        - mymlruns:${SHARED_VOLUME}
    depends_on:
        - core
    networks:
        - mlapp-net

networks:
  mlapp-net:
    driver: bridge

volumes:
  mymlruns: 